/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as IndexImport } from './routes/index'
import { Route as AuthenticatedBoardIndexImport } from './routes/_authenticated/board/index'
import { Route as AuthenticatedBoardBoardIdImport } from './routes/_authenticated/board/$boardId'
import { Route as AuthenticatedBoardBoardIdTasksTaskIdIndexImport } from './routes/_authenticated/board/$boardId/tasks/$taskId/index'

// Create/Update Routes

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedBoardIndexRoute = AuthenticatedBoardIndexImport.update({
  id: '/board/',
  path: '/board/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedBoardBoardIdRoute = AuthenticatedBoardBoardIdImport.update({
  id: '/board/$boardId',
  path: '/board/$boardId',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedBoardBoardIdTasksTaskIdIndexRoute =
  AuthenticatedBoardBoardIdTasksTaskIdIndexImport.update({
    id: '/tasks/$taskId/',
    path: '/tasks/$taskId/',
    getParentRoute: () => AuthenticatedBoardBoardIdRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/board/$boardId': {
      id: '/_authenticated/board/$boardId'
      path: '/board/$boardId'
      fullPath: '/board/$boardId'
      preLoaderRoute: typeof AuthenticatedBoardBoardIdImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/board/': {
      id: '/_authenticated/board/'
      path: '/board'
      fullPath: '/board'
      preLoaderRoute: typeof AuthenticatedBoardIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/board/$boardId/tasks/$taskId/': {
      id: '/_authenticated/board/$boardId/tasks/$taskId/'
      path: '/tasks/$taskId'
      fullPath: '/board/$boardId/tasks/$taskId'
      preLoaderRoute: typeof AuthenticatedBoardBoardIdTasksTaskIdIndexImport
      parentRoute: typeof AuthenticatedBoardBoardIdImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedBoardBoardIdRouteChildren {
  AuthenticatedBoardBoardIdTasksTaskIdIndexRoute: typeof AuthenticatedBoardBoardIdTasksTaskIdIndexRoute
}

const AuthenticatedBoardBoardIdRouteChildren: AuthenticatedBoardBoardIdRouteChildren =
  {
    AuthenticatedBoardBoardIdTasksTaskIdIndexRoute:
      AuthenticatedBoardBoardIdTasksTaskIdIndexRoute,
  }

const AuthenticatedBoardBoardIdRouteWithChildren =
  AuthenticatedBoardBoardIdRoute._addFileChildren(
    AuthenticatedBoardBoardIdRouteChildren,
  )

interface AuthenticatedRouteChildren {
  AuthenticatedBoardBoardIdRoute: typeof AuthenticatedBoardBoardIdRouteWithChildren
  AuthenticatedBoardIndexRoute: typeof AuthenticatedBoardIndexRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedBoardBoardIdRoute: AuthenticatedBoardBoardIdRouteWithChildren,
  AuthenticatedBoardIndexRoute: AuthenticatedBoardIndexRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthenticatedRouteWithChildren
  '/board/$boardId': typeof AuthenticatedBoardBoardIdRouteWithChildren
  '/board': typeof AuthenticatedBoardIndexRoute
  '/board/$boardId/tasks/$taskId': typeof AuthenticatedBoardBoardIdTasksTaskIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthenticatedRouteWithChildren
  '/board/$boardId': typeof AuthenticatedBoardBoardIdRouteWithChildren
  '/board': typeof AuthenticatedBoardIndexRoute
  '/board/$boardId/tasks/$taskId': typeof AuthenticatedBoardBoardIdTasksTaskIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/_authenticated/board/$boardId': typeof AuthenticatedBoardBoardIdRouteWithChildren
  '/_authenticated/board/': typeof AuthenticatedBoardIndexRoute
  '/_authenticated/board/$boardId/tasks/$taskId/': typeof AuthenticatedBoardBoardIdTasksTaskIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/board/$boardId'
    | '/board'
    | '/board/$boardId/tasks/$taskId'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '' | '/board/$boardId' | '/board' | '/board/$boardId/tasks/$taskId'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/_authenticated/board/$boardId'
    | '/_authenticated/board/'
    | '/_authenticated/board/$boardId/tasks/$taskId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authenticated"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/board/$boardId",
        "/_authenticated/board/"
      ]
    },
    "/_authenticated/board/$boardId": {
      "filePath": "_authenticated/board/$boardId.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/board/$boardId/tasks/$taskId/"
      ]
    },
    "/_authenticated/board/": {
      "filePath": "_authenticated/board/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/board/$boardId/tasks/$taskId/": {
      "filePath": "_authenticated/board/$boardId/tasks/$taskId/index.tsx",
      "parent": "/_authenticated/board/$boardId"
    }
  }
}
ROUTE_MANIFEST_END */
